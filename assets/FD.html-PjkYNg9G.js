import{_ as t,c as a,b as n,o as r}from"./app-DFDql4E9.js";const i={};function p(o,e){return r(),a("div",null,e[0]||(e[0]=[n('<h1 id="文件描述符-fd-讲解-📁" tabindex="-1"><a class="header-anchor" href="#文件描述符-fd-讲解-📁"><span>文件描述符(FD)讲解 📁</span></a></h1><h2 id="什么是文件描述符-fd-🔍" tabindex="-1"><a class="header-anchor" href="#什么是文件描述符-fd-🔍"><span>什么是文件描述符(FD)？🔍</span></a></h2><p>文件描述符其实感觉还挺常见，挺重要的。OS 这课就不用说了，就是讲这玩意的 📚。再比如说我还在学 Redis 网络模型的时候也遇到了这个东西 💻。接下来我给大家介绍一下 FD。</p><p>文件描述符是一个非负整数，它是由操作系统分配给每个打开的文件或 I/O 资源（如普通文件、目录、设备文件、管道、套接字等）的一个唯一标识符 📜。它是进程与这些资源进行交互的主要手段，允许进程执行读取 📖、写入 📝、查找 🔍 等操作。</p><h2 id="标准文件描述符-📜" tabindex="-1"><a class="header-anchor" href="#标准文件描述符-📜"><span>标准文件描述符 📜</span></a></h2><p>0 - stdin (标准输入)：默认连接到键盘 ⌨️。 1 - stdout (标准输出)：默认连接到终端屏幕 🖥️。 2 - stderr (标准错误)：默认也连接到终端屏幕，但用于显示错误信息 ⚠️。 这三个是每个进程都有的，所以你下一个分配的文件描述符通常会从几开始呢？哎呀好难啊 🤔，不会是 3 吧 🤔。奥~就是 3👍。 OS 默认就是从 0 读，往 1 写。并且 Linux 的命令函数都是单一职责的嘛，那么 man xxx | grep xxx 时，大家知道会怎么样嘛？就是会让 man 函数的 1 与 grep 的 0 相连，形成管道!</p><h2 id="文件描述符表-在用户空间-📋" tabindex="-1"><a class="header-anchor" href="#文件描述符表-在用户空间-📋"><span>文件描述符表（在用户空间）📋</span></a></h2><p>既然对文件描述符有点了解了，那么就必须给大家提一下文件描述符表了，毕竟那一个个的数字得有个地方存放啊 📦。</p><p>每个进程都有自己的文件描述符表，该表将文件描述符映射到内核中的文件对象 🔗。文件描述符表存在于用户空间，并且对每个进程都是独立的。每当进程打开一个新的文件或 I/O 资源时，操作系统会在进程的文件描述符表中添加一个新条目，并返回一个唯一的文件描述符给进程 ✨。</p><h2 id="系统级文件表-在内核空间-⚙️" tabindex="-1"><a class="header-anchor" href="#系统级文件表-在内核空间-⚙️"><span>系统级文件表（在内核空间）⚙️</span></a></h2><p>其中包含了所有打开文件的状态信息 📚。当进程请求打开一个文件时，操作系统会在系统级别创建一个新的文件表项，并将其与进程的文件描述符关联起来 🔗。 我说白了就是我白说了 🤣。这个系统级文件表，不就是为了隔离用户空间和内核空间吗~ 然后每个进程的文件描述符表中的每个 FD 都指向这个系统级文件表嘛，然后你的进程就能读文件了嘛 📖。</p><h2 id="总结-🎉" tabindex="-1"><a class="header-anchor" href="#总结-🎉"><span>总结 🎉</span></a></h2><p>我感觉上面写的已经挺干了，但其实也很浅，主要是让大家对这它有个印象，当各位在学什么进程间通信啊，Redis 的 IO 多路复用啊 🌐 或文件什么的会更加舒适吧哈哈哈 😄。</p>',13)]))}const d=t(i,[["render",p],["__file","FD.html.vue"]]),l=JSON.parse('{"path":"/computer/OS/FD.html","title":"文件描述符(FD)讲解 📁","lang":"zh-CN","frontmatter":{"description":"文件描述符(FD)讲解 📁 什么是文件描述符(FD)？🔍 文件描述符其实感觉还挺常见，挺重要的。OS 这课就不用说了，就是讲这玩意的 📚。再比如说我还在学 Redis 网络模型的时候也遇到了这个东西 💻。接下来我给大家介绍一下 FD。 文件描述符是一个非负整数，它是由操作系统分配给每个打开的文件或 I/O 资源（如普通文件、目录、设备文件、管道...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/RoseWhisperInTheWind/computer/OS/FD.html"}],["meta",{"property":"og:site_name","content":"风中玫瑰的低语"}],["meta",{"property":"og:title","content":"文件描述符(FD)讲解 📁"}],["meta",{"property":"og:description","content":"文件描述符(FD)讲解 📁 什么是文件描述符(FD)？🔍 文件描述符其实感觉还挺常见，挺重要的。OS 这课就不用说了，就是讲这玩意的 📚。再比如说我还在学 Redis 网络模型的时候也遇到了这个东西 💻。接下来我给大家介绍一下 FD。 文件描述符是一个非负整数，它是由操作系统分配给每个打开的文件或 I/O 资源（如普通文件、目录、设备文件、管道..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-13T12:00:35.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-13T12:00:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件描述符(FD)讲解 📁\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-13T12:00:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Rose\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是文件描述符(FD)？🔍","slug":"什么是文件描述符-fd-🔍","link":"#什么是文件描述符-fd-🔍","children":[]},{"level":2,"title":"标准文件描述符 📜","slug":"标准文件描述符-📜","link":"#标准文件描述符-📜","children":[]},{"level":2,"title":"文件描述符表（在用户空间）📋","slug":"文件描述符表-在用户空间-📋","link":"#文件描述符表-在用户空间-📋","children":[]},{"level":2,"title":"系统级文件表（在内核空间）⚙️","slug":"系统级文件表-在内核空间-⚙️","link":"#系统级文件表-在内核空间-⚙️","children":[]},{"level":2,"title":"总结 🎉","slug":"总结-🎉","link":"#总结-🎉","children":[]}],"git":{"createdTime":1733745241000,"updatedTime":1734091235000,"contributors":[{"name":"Rose","email":"2677596161@qq.com","commits":1}]},"readingTime":{"minutes":2.47,"words":741},"filePathRelative":"computer/OS/FD.md","localizedDate":"2024年12月9日","excerpt":"\\n<h2>什么是文件描述符(FD)？🔍</h2>\\n<p>文件描述符其实感觉还挺常见，挺重要的。OS 这课就不用说了，就是讲这玩意的 📚。再比如说我还在学 Redis 网络模型的时候也遇到了这个东西 💻。接下来我给大家介绍一下 FD。</p>\\n<p>文件描述符是一个非负整数，它是由操作系统分配给每个打开的文件或 I/O 资源（如普通文件、目录、设备文件、管道、套接字等）的一个唯一标识符 📜。它是进程与这些资源进行交互的主要手段，允许进程执行读取 📖、写入 📝、查找 🔍 等操作。</p>\\n<h2>标准文件描述符 📜</h2>\\n<p>0 - stdin (标准输入)：默认连接到键盘 ⌨️。\\n1 - stdout (标准输出)：默认连接到终端屏幕 🖥️。\\n2 - stderr (标准错误)：默认也连接到终端屏幕，但用于显示错误信息 ⚠️。\\n这三个是每个进程都有的，所以你下一个分配的文件描述符通常会从几开始呢？哎呀好难啊 🤔，不会是 3 吧 🤔。奥~就是 3👍。\\nOS 默认就是从 0 读，往 1 写。并且 Linux 的命令函数都是单一职责的嘛，那么 man xxx | grep xxx 时，大家知道会怎么样嘛？就是会让 man 函数的 1 与 grep 的 0 相连，形成管道!</p>","autoDesc":true}');export{d as comp,l as data};
