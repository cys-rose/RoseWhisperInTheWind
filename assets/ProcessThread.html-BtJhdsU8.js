import{_ as t,c as a,b as n,o as r}from"./app-nHDYPI3C.js";const s={};function o(i,e){return r(),a("div",null,e[0]||(e[0]=[n('<h1 id="我对进程和线程的认识-😊" tabindex="-1"><a class="header-anchor" href="#我对进程和线程的认识-😊"><span>我对进程和线程的认识 😊</span></a></h1><h2 id="我眼中的这俩-🤔" tabindex="-1"><a class="header-anchor" href="#我眼中的这俩-🤔"><span>我眼中的这俩 🤔</span></a></h2><p><strong>进程是资源分配的最小单位，也是资源调度的独立单位。💼 线程是资源调度的最小单位。🏃‍♂️</strong></p><h2 id="定义-📝" tabindex="-1"><a class="header-anchor" href="#定义-📝"><span>定义 📝</span></a></h2><p>进程是操作系统结构中的一个独立单元，它包含了程序运行所需的所有信息，包括代码、数据、堆栈、打开的文件等。每个进程都有自己独立的地址空间。🏢 线程是进程中的一部分，有时被称为轻量级进程。同一个进程中的多个线程共享该进程的资源，如内存空间、文件句柄等，但每个线程有自己的指令指针、栈和寄存器状态。🧵</p><h2 id="创建与销毁-🔨" tabindex="-1"><a class="header-anchor" href="#创建与销毁-🔨"><span>创建与销毁：🔨</span></a></h2><p>进程的创建和销毁涉及更多的系统开销，因为需要分配和回收资源。💸 线程的创建和销毁相对简单，消耗的资源较少，因此创建和切换速度更快。🚀</p><h2 id="通信-📡" tabindex="-1"><a class="header-anchor" href="#通信-📡"><span>通信：📡</span></a></h2><p>不同进程之间的通信通常需要通过操作系统提供的特殊机制，如管道、套接字、共享内存等。🔄 同一进程内的线程间通信更为直接，因为它们共享相同的地址空间，可以直接访问彼此的数据。🔗</p><h2 id="独立性-🛡️" tabindex="-1"><a class="header-anchor" href="#独立性-🛡️"><span>独立性：🛡️</span></a></h2><p>进程是独立的，一个进程的崩溃不会影响到其他进程。🛡️ 线程不是完全独立的，如果一个线程崩溃，可能会导致整个进程的异常。</p>',11)]))}const h=t(s,[["render",o],["__file","ProcessThread.html.vue"]]),l=JSON.parse('{"path":"/posts/OS/ProcessThread.html","title":"我对进程和线程的认识 😊","lang":"zh-CN","frontmatter":{"description":"我对进程和线程的认识 😊 我眼中的这俩 🤔 进程是资源分配的最小单位，也是资源调度的独立单位。💼 线程是资源调度的最小单位。🏃‍♂️ 定义 📝 进程是操作系统结构中的一个独立单元，它包含了程序运行所需的所有信息，包括代码、数据、堆栈、打开的文件等。每个进程都有自己独立的地址空间。🏢 线程是进程中的一部分，有时被称为轻量级进程。同一个进程中的...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/RoseWhisperInTheWind/posts/OS/ProcessThread.html"}],["meta",{"property":"og:site_name","content":"风中玫瑰的低语"}],["meta",{"property":"og:title","content":"我对进程和线程的认识 😊"}],["meta",{"property":"og:description","content":"我对进程和线程的认识 😊 我眼中的这俩 🤔 进程是资源分配的最小单位，也是资源调度的独立单位。💼 线程是资源调度的最小单位。🏃‍♂️ 定义 📝 进程是操作系统结构中的一个独立单元，它包含了程序运行所需的所有信息，包括代码、数据、堆栈、打开的文件等。每个进程都有自己独立的地址空间。🏢 线程是进程中的一部分，有时被称为轻量级进程。同一个进程中的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-09T11:54:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-09T11:54:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"我对进程和线程的认识 😊\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-09T11:54:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Rose\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"我眼中的这俩 🤔","slug":"我眼中的这俩-🤔","link":"#我眼中的这俩-🤔","children":[]},{"level":2,"title":"定义 📝","slug":"定义-📝","link":"#定义-📝","children":[]},{"level":2,"title":"创建与销毁：🔨","slug":"创建与销毁-🔨","link":"#创建与销毁-🔨","children":[]},{"level":2,"title":"通信：📡","slug":"通信-📡","link":"#通信-📡","children":[]},{"level":2,"title":"独立性：🛡️","slug":"独立性-🛡️","link":"#独立性-🛡️","children":[]}],"git":{"createdTime":1733745241000,"updatedTime":1733745241000,"contributors":[{"name":"Rose","email":"2677596161@qq.com","commits":1}]},"readingTime":{"minutes":1.26,"words":378},"filePathRelative":"posts/OS/ProcessThread.md","localizedDate":"2024年12月9日","excerpt":"\\n<h2>我眼中的这俩 🤔</h2>\\n<p><strong>进程是资源分配的最小单位，也是资源调度的独立单位。💼\\n线程是资源调度的最小单位。🏃‍♂️</strong></p>\\n<h2>定义 📝</h2>\\n<p>进程是操作系统结构中的一个独立单元，它包含了程序运行所需的所有信息，包括代码、数据、堆栈、打开的文件等。每个进程都有自己独立的地址空间。🏢\\n线程是进程中的一部分，有时被称为轻量级进程。同一个进程中的多个线程共享该进程的资源，如内存空间、文件句柄等，但每个线程有自己的指令指针、栈和寄存器状态。🧵</p>\\n<h2>创建与销毁：🔨</h2>\\n<p>进程的创建和销毁涉及更多的系统开销，因为需要分配和回收资源。💸\\n线程的创建和销毁相对简单，消耗的资源较少，因此创建和切换速度更快。🚀</p>","autoDesc":true}');export{h as comp,l as data};
